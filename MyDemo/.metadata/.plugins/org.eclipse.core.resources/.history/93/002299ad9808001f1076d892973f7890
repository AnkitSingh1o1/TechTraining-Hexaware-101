package com.service;

import java.sql.SQLException;

import com.dao.IBankServiceProvider;
import com.dao.IBankServiceProviderImpl;
import com.exception.InvalidAccountException;
import com.exception.OverDraftLimitExcededException;
import com.model.Account;
import com.model.Address;
import com.model.Customer;


public class IBankService {

	IBankServiceProvider bankDao = new IBankServiceProviderImpl();
	ICustomerService customerDao = new ICustomerService();
	final double interestRate = 4.5;
	
	public int createAccount(Account account) throws SQLException {
		return bankDao.createAccount(account);
	}

	public int createCustomer(Customer customer) throws SQLException {
		return bankDao.createCustomer(customer);
	}

	public int createAddress(Address address) throws SQLException {
		return bankDao.createAddress(address);
	}

	public float calculateInterest(long accountNumber) throws SQLException, InvalidAccountException {
		Account account = customerDao.getDetails(accountNumber);
		double balance = account.getAccount_balance();
		
		return (float) (balance*interestRate); // For time = 1 year;
			
	}

}
