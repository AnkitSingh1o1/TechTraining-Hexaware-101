package com.service;

import java.sql.SQLException;

import com.dao.ICustomerServiceProvider;
import com.dao.ICustomerServiceProviderImpl;
import com.dto.AccountAndCustomer;
import com.exception.InsufficientFundException;
import com.exception.InvalidAccountException;
import com.exception.OverDraftLimitExcededException;
import com.model.Account;

public class ICustomerService {

	ICustomerServiceProvider dao = new ICustomerServiceProviderImpl();

	public float getAccountBalance(long accountNumber) throws SQLException, InvalidAccountException {
		return dao.getAccountBalance(accountNumber);
	}

	public int deposit(long accountNumber1, float amount1) throws SQLException, InvalidAccountException {
		return dao.deposit(accountNumber1, amount1);
	}

	public int withdraw(long accountNumber11, float amount11) throws SQLException, InvalidAccountException, InsufficientFundException, OverDraftLimitExcededException {
	return dao.withdraw(accountNumber11, amount11);
	}
	
	
}
